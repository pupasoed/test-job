[{"C:\\react\\test-job\\test-app\\src\\index.tsx":"1","C:\\react\\test-job\\test-app\\src\\auth\\singIn\\SignIn.tsx":"2","C:\\react\\test-job\\test-app\\src\\components\\Button.tsx":"3","C:\\react\\test-job\\test-app\\src\\layout\\AuthLayout.tsx":"4","C:\\react\\test-job\\test-app\\src\\components\\Input.tsx":"5","C:\\react\\test-job\\test-app\\src\\auth\\Auth.tsx":"6","C:\\react\\test-job\\test-app\\src\\auth\\singIn\\loginPage.tsx":"7","C:\\react\\test-job\\test-app\\src\\routes\\Routes.tsx":"8","C:\\react\\test-job\\test-app\\src\\auth\\singUp\\RegisterPage.tsx":"9","C:\\react\\test-job\\test-app\\src\\components\\Links.tsx":"10","C:\\react\\test-job\\test-app\\src\\auth\\singUp\\SignUp.tsx":"11","C:\\react\\test-job\\test-app\\src\\components\\Checkbox.tsx":"12","C:\\react\\test-job\\test-app\\src\\components\\app\\App.tsx":"13","C:\\react\\test-job\\test-app\\src\\store.ts":"14","C:\\react\\test-job\\test-app\\src\\components\\pages\\PlayerPage.js":"15","C:\\react\\test-job\\test-app\\src\\reducers\\index.ts":"16","C:\\react\\test-job\\test-app\\src\\services\\player-service.js":"17","C:\\react\\test-job\\test-app\\src\\reducers\\players.ts":"18","C:\\react\\test-job\\test-app\\src\\actions\\players\\playersActions.ts":"19"},{"size":247,"mtime":1610121651134,"results":"20","hashOfConfig":"21"},{"size":3128,"mtime":1610121940130,"results":"22","hashOfConfig":"21"},{"size":641,"mtime":1607930563301,"results":"23","hashOfConfig":"21"},{"size":1388,"mtime":1607931014977,"results":"24","hashOfConfig":"21"},{"size":2433,"mtime":1608103857673,"results":"25","hashOfConfig":"21"},{"size":307,"mtime":1607109929225,"results":"26","hashOfConfig":"27"},{"size":352,"mtime":1607930563299,"results":"28","hashOfConfig":"21"},{"size":594,"mtime":1610439907060,"results":"29","hashOfConfig":"21"},{"size":353,"mtime":1607930563300,"results":"30","hashOfConfig":"21"},{"size":969,"mtime":1607930563302,"results":"31","hashOfConfig":"21"},{"size":3607,"mtime":1608031263921,"results":"32","hashOfConfig":"21"},{"size":634,"mtime":1607930563301,"results":"33","hashOfConfig":"21"},{"size":302,"mtime":1610450808236,"results":"34","hashOfConfig":"21"},{"size":454,"mtime":1610820870800,"results":"35","hashOfConfig":"21"},{"size":1016,"mtime":1610878086737,"results":"36","hashOfConfig":"21"},{"size":227,"mtime":1610820660894,"results":"37","hashOfConfig":"21"},{"size":483,"mtime":1610661059561,"results":"38","hashOfConfig":"21"},{"size":1883,"mtime":1610820482862,"results":"39","hashOfConfig":"21"},{"size":1245,"mtime":1610819391310,"results":"40","hashOfConfig":"21"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1e4lhy2",{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"5cnlp9",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"43"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"43"},"C:\\react\\test-job\\test-app\\src\\index.tsx",[],["88","89"],"C:\\react\\test-job\\test-app\\src\\auth\\singIn\\SignIn.tsx",["90"],"import React from 'react'\r\nimport { Input } from \"../../components/Input\"\r\nimport { Button } from \"../../components/Button\"\r\nimport { Links } from \"../../components/Links\";\r\nimport { useForm } from \"react-hook-form\";\r\n// import {SwapiService} from \"../../api/api\";\r\nimport {stringify} from \"querystring\";\r\n\r\n\r\nexport function SignIn() {\r\n\r\n    const Service = async (url, name) => {\r\n        // async function getResource(url: any, name) {\r\n        const res = await fetch(`http://dev.trainee.dex-it.ru/api${url}`,\r\n            {method: 'POST',headers:{'Content-Type': 'application/json'},\r\n            body: JSON.stringify(name),}\r\n    )\r\n        if (!res.ok) {\r\n            throw new Error(`could not fetch ${res.status}`)\r\n        }\r\n        const body: any = await res.json();\r\n        return body;\r\n    }\r\n    // }\r\n\r\n\r\n        // authSingIn(requestOptions){\r\n        //     const authData = {\r\n        //         url: '/Auth/SignUp'\r\n        //     }\r\n        //     return this.getResource(`/Auth/SignUp`)\r\n        // }\r\n\r\n\r\n    const { register, handleSubmit, errors } = useForm({})\r\n\r\n    const onSubmit = (name) => {\r\n        const url: string =  '/Auth/SignUp'\r\n        Service(url, name)\r\n    }\r\n\r\n    return(\r\n            <form onSubmit={handleSubmit(onSubmit)} >\r\n                <Input\r\n                    name=\"login\"\r\n                    register={register({\r\n                        required: {\r\n                            value: true,\r\n                            message: 'This field is required',\r\n                        },\r\n                        maxLength: {\r\n                            value: 15,\r\n                            message: 'This input exceed maxLength.',\r\n                        },\r\n                        minLength: {\r\n                            value: 6,\r\n                            message: 'This input exceed minLength.',\r\n                        }\r\n                        })}\r\n\r\n                    placeholder=\"Login\"\r\n                    label=\"Login\"\r\n                    inputType={\"login\"}\r\n                    error={errors.login}\r\n                />\r\n                <Input\r\n                    name=\"password\"\r\n                    register={register({\r\n                        required: {\r\n                            value: true,\r\n                            message: 'This field is required',\r\n                        },\r\n                        maxLength: {\r\n                            value: 15,\r\n                            message: 'This input exceed maxLength.',\r\n                        },\r\n                        minLength: {\r\n                            value: 2,\r\n                            message: 'This input exceed minLength.',\r\n                        }\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    label=\"Password\"\r\n                    inputType={\"password\"}\r\n                    error={errors.password}\r\n                />\r\n                <Button buttonName=\"Sign In\"/>\r\n                <Links labelName={\"Not a member yet? \"} linkText={\"Sign up\"} link={\"/register\"}/>\r\n            </form>\r\n    );\r\n}\r\n","C:\\react\\test-job\\test-app\\src\\components\\Button.tsx",[],"C:\\react\\test-job\\test-app\\src\\layout\\AuthLayout.tsx",[],"C:\\react\\test-job\\test-app\\src\\components\\Input.tsx",["91","92","93"],"import React, {FC, InputHTMLAttributes, ReactNode} from 'react'\r\nimport styled from \"styled-components\";\r\nimport {ReactComponent as EyeIcon} from \"../assets/img/eye.svg\";\r\nimport {FieldError, UseFormMethods} from \"react-hook-form\";\r\n// import {Simulate} from \"react-dom/test-utils\";\r\n// import error = Simulate.error;\r\n\r\ninterface AuthLayoutProps{\r\n    placeholder?: string;\r\n    label?: string;\r\n    icon?: ReactNode;\r\n    inputType: \"email\" | \"password\" | \"login\";\r\n    name?: string;\r\n    register?: any;\r\n    error?: FieldError;\r\n}\r\n\r\nexport const Input: FC<AuthLayoutProps> = ({\r\n                                               label,\r\n                                               placeholder,\r\n                                               inputType,\r\n                                               error,\r\n                                               name,\r\n                                               register,\r\n                                               ...inputProps\r\n                                           }) => {\r\n\r\n    return (\r\n        <InputWrapper>\r\n            {label && <StyledLabel className=\"label\">{label}</StyledLabel>}\r\n            <StyledInput\r\n                placeholder={placeholder}\r\n                type={inputType}\r\n                ref={register}\r\n                name={name}\r\n                error={error}\r\n                {...inputProps}\r\n            />\r\n            <ErrorMassage> {error?.message} </ErrorMassage>\r\n            <Eye/>\r\n        </InputWrapper>\r\n    )\r\n}\r\n\r\n\r\nconst StyledInput = styled.input <{error: FieldError}>`\r\n  font-family: Avenir;\r\n  background: #F6F6F6;\r\n  border-radius: 4px;\r\n  height: 40px;\r\n  border-width: 1px;\r\n  border-color: ${props => props.error ? '#FF768E' : 'aliceblue'};\r\n  border-style: solid;\r\n  padding-left: 10px;\r\n  //border: 1px solid #FF768E;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0 0 5px #D9D9D9;\r\n  }`;\r\n\r\nconst StyledLabel = styled.label`\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  line-height: 17px;\r\n  color: #707070;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  display: grid;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nconst Eye = styled.a`\r\n  display: flex;\r\n  background: url(../assets/img/eye.svg) no-repeat scroll 7px 7px;\r\n`\r\n\r\nconst ErrorMassage = styled.div`\r\n  margin: 0;\r\n  color: #FF768E;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n  line-height: 150%;\r\n`","C:\\react\\test-job\\test-app\\src\\auth\\Auth.tsx",["94","95"],"C:\\react\\test-job\\test-app\\src\\auth\\singIn\\loginPage.tsx",[],"C:\\react\\test-job\\test-app\\src\\routes\\Routes.tsx",[],"C:\\react\\test-job\\test-app\\src\\auth\\singUp\\RegisterPage.tsx",[],"C:\\react\\test-job\\test-app\\src\\components\\Links.tsx",[],"C:\\react\\test-job\\test-app\\src\\auth\\singUp\\SignUp.tsx",["96"],"import React from 'react'\r\nimport { Input } from \"../../components/Input\"\r\nimport { Button } from \"../../components/Button\"\r\nimport { Links } from \"../../components/Links\";\r\nimport { Checkbox } from \"../../components/Checkbox\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\nexport function SignUp() {\r\n\r\n    const { register, handleSubmit, errors } = useForm({})\r\n\r\n    const onSubmit = (name) => {\r\n        console.log(name);\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <Input\r\n                register={register({\r\n                    required: {\r\n                        value: true,\r\n                        message: 'This field is required',\r\n                    },\r\n                    maxLength: {\r\n                        value: 15,\r\n                        message: 'This input exceed maxLength.',\r\n                    },\r\n                    minLength: {\r\n                        value: 2,\r\n                        message: 'This input exceed minLength.',\r\n                    }\r\n                })}\r\n                   placeholder=\"Name\"\r\n                   label=\"Name\"\r\n                   inputType={\"login\"}\r\n                   name={\"name\"}\r\n            />\r\n            <Input\r\n                register={register({\r\n                    required: {\r\n                        value: true,\r\n                        message: 'This field is required',\r\n                    },\r\n                    maxLength: {\r\n                        value: 15,\r\n                        message: 'This input exceed maxLength.',\r\n                    },\r\n                    minLength: {\r\n                        value: 2,\r\n                        message: 'This input exceed minLength.',\r\n                    }\r\n                })}\r\n                placeholder=\"Login\"\r\n                label=\"Login\"\r\n                inputType={\"login\"}\r\n                name={\"login\"}\r\n            />\r\n            <Input\r\n                register={register({\r\n                    required: {\r\n                        value: true,\r\n                        message: 'This field is required',\r\n                    },\r\n                    maxLength: {\r\n                        value: 15,\r\n                        message: 'This input exceed maxLength.',\r\n                    },\r\n                    minLength: {\r\n                        value: 6,\r\n                        message: 'This input exceed minLength.',\r\n                    }\r\n                })}\r\n                placeholder=\"Password\"\r\n                label=\"Password\"\r\n                inputType={\"password\"}\r\n                name={\"password\"}\r\n            />\r\n            <Input\r\n                register={register({\r\n                    required: {\r\n                        value: true,\r\n                        message: 'This field is required',\r\n                    },\r\n                    maxLength: {\r\n                        value: 15,\r\n                        message: 'This input exceed maxLength.',\r\n                    },\r\n                    minLength: {\r\n                        value: 2,\r\n                        message: 'This input exceed minLength.',\r\n                    }\r\n                })}\r\n                placeholder=\"Confirm password\"\r\n                label=\"Enter your password again\"\r\n                inputType={\"password\"}\r\n                name={\"confirmPassword\"}\r\n            />\r\n            <Checkbox label=\"I accept the agreement\" />\r\n            <Button buttonName=\"Sign Up\"/>\r\n            <Links labelName={\"Already a member? \"} linkText={\"Sign in\"} link={\"/login\"}/>\r\n        </form>\r\n    );\r\n}","C:\\react\\test-job\\test-app\\src\\components\\Checkbox.tsx",[],["97","98"],"C:\\react\\test-job\\test-app\\src\\components\\app\\App.tsx",[],"C:\\react\\test-job\\test-app\\src\\store.ts",[],"C:\\react\\test-job\\test-app\\src\\components\\pages\\PlayerPage.js",["99","100","101","102"],"import React from 'react'\r\nimport {  fetchPlayers } from '../../actions/players/playersActions'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { getPlayers } from '../../services/player-service'\r\nimport {bindActionCreators} from \"redux\";\r\nimport {store} from \"../../store\";\r\nimport {getPlayersAction} from \"../../reducers/players\";\r\n\r\nconst getData = (getPlayers, dispatch) => {\r\n    dispatch(fetchPlayers(getPlayers, dispatch));\r\n}\r\nexport const PlayersPage = () => {\r\n    store.subscribe(()=>console.log(store.getState()))\r\n\r\n    const dispatch = useDispatch()\r\n    return <div>\r\n        <button onClick = {() => {\r\n            dispatch(getPlayersAction());\r\n        }}>\r\n            Test</button>\r\n        {/*<button onClick = {() => dispatch(getPlayersActon(getPlayers()))} >Test</button>*/}\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n// const mapDispatchToProps = (dispatch, { getPlayers }) => {\r\n//\r\n//     return bindActionCreators({\r\n//         fetchPlayers: fetchPlayers(getPlayers)\r\n//     }, dispatch);\r\n// };",["103","104"],"C:\\react\\test-job\\test-app\\src\\reducers\\index.ts",[],"C:\\react\\test-job\\test-app\\src\\services\\player-service.js",[],"C:\\react\\test-job\\test-app\\src\\reducers\\players.ts",["105","106","107","108","109"],"import {\r\n    ERROR_PLAYERS_LOADED,\r\n    FETCH_PLAYERS_LOADED,\r\n    FETCH_PLAYERS_REQUESTED, fetchPlayers,\r\n    GET_PLAYERS\r\n} from \"../actions/players/playersActions\";\r\nimport {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\r\nimport {getPlayers} from \"../services/player-service\";\r\n\r\ninterface Player{\r\n    name: string\r\n}\r\n\r\ninterface PlayersState {\r\n    players: Player[]\r\n}\r\n\r\n\r\nconst initialState = {\r\n    players: []\r\n};\r\n\r\n// export const playersReducer = (state = initialState, action) => {\r\n//     switch (action.type){\r\n//\r\n//         case GET_PLAYERS:\r\n//             return {\r\n//                 players: action.state,\r\n//             };\r\n//         case FETCH_PLAYERS_REQUESTED:\r\n//             return {\r\n//                 players: []\r\n//             };\r\n//         case FETCH_PLAYERS_LOADED:\r\n//             return {\r\n//                 players: action.payload\r\n//             };\r\n//         case ERROR_PLAYERS_LOADED:\r\n//             return {\r\n//                 players: action.payload\r\n//             };\r\n//         default:\r\n//             return state.players;\r\n//     }\r\n// }\r\n\r\n\r\nexport const getPlayersAction = createAsyncThunk(\r\n    FETCH_PLAYERS_REQUESTED,\r\n    async () => {\r\n        try{\r\n            return await getPlayers()\r\n        } catch (err){\r\n            return err\r\n        }\r\n    }\r\n)\r\n\r\nconst playersSlice = createSlice({\r\n    name: \"players\",\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder.addCase(getPlayersAction.pending, (state) => {\r\n            state.players = [];\r\n        });\r\n        builder.addCase(getPlayersAction.fulfilled, (state, action) => {\r\n            state.players = action.payload\r\n        })\r\n        builder.addCase(getPlayersAction.rejected, (state, action)=>{\r\n            state.players = [];\r\n        })\r\n    }\r\n})\r\n\r\nexport const playersReducer = playersSlice.reducer","C:\\react\\test-job\\test-app\\src\\actions\\players\\playersActions.ts",["110","111","112","113"],"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport {accessSync} from \"fs\";\r\n\r\n\r\nexport const GET_PLAYERS = 'players/GET_PLAYERS'\r\nexport const FETCH_PLAYERS_REQUESTED = 'players/FETCH_PLAYERS_REQUESTED'\r\nexport const FETCH_PLAYERS_LOADED = 'players/FETCH_PLAYERS_LOADED'\r\nexport const ERROR_PLAYERS_LOADED = 'players/ERROR_PLAYERS_LOADED'\r\n\r\n\r\nexport const getPlayersActon = (getPlayers) => {\r\n    console.log(getPlayers)\r\n    return {\r\n        type: GET_PLAYERS,\r\n        payload: getPlayers\r\n    }\r\n}\r\n\r\nconst playersRequested = () => {\r\n    console.log(\"Action playersRequested\")\r\n    return{\r\n        type: FETCH_PLAYERS_REQUESTED,\r\n    }\r\n}\r\n\r\ninterface Player {\r\n    name: string;\r\n}\r\nconst playersLoaded = (players) => {\r\n    console.log(\"Action playersLoaded\")\r\n    return{\r\n        type: FETCH_PLAYERS_LOADED,\r\n        payload: players\r\n    }\r\n}\r\n\r\nconst playersError = (error: Error) => {\r\n    return {\r\n        type: ERROR_PLAYERS_LOADED,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const fetchPlayers = (getPlayers, dispatch) => () => {\r\n    dispatch(playersRequested());\r\n    getPlayers()\r\n        .then((data) => dispatch(playersLoaded(data)))\r\n        .catch((err) => dispatch(playersError(err)))\r\n}\r\n\r\n\r\n\r\n",{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":7,"column":9,"nodeType":"120","messageId":"121","endLine":7,"endColumn":18},{"ruleId":"118","severity":1,"message":"122","line":1,"column":20,"nodeType":"120","messageId":"121","endLine":1,"endColumn":39},{"ruleId":"118","severity":1,"message":"123","line":3,"column":27,"nodeType":"120","messageId":"121","endLine":3,"endColumn":34},{"ruleId":"118","severity":1,"message":"124","line":4,"column":21,"nodeType":"120","messageId":"121","endLine":4,"endColumn":35},{"ruleId":"118","severity":1,"message":"125","line":2,"column":26,"nodeType":"120","messageId":"121","endLine":2,"endColumn":32},{"ruleId":"118","severity":1,"message":"126","line":2,"column":34,"nodeType":"120","messageId":"121","endLine":2,"endColumn":39},{"ruleId":"118","severity":1,"message":"127","line":11,"column":37,"nodeType":"120","messageId":"121","endLine":11,"endColumn":43},{"ruleId":"114","replacedBy":"128"},{"ruleId":"116","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":3,"column":22,"nodeType":"120","messageId":"121","endLine":3,"endColumn":33},{"ruleId":"130","severity":1,"message":"132","line":4,"column":10,"nodeType":"120","messageId":"121","endLine":4,"endColumn":20},{"ruleId":"130","severity":1,"message":"133","line":5,"column":9,"nodeType":"120","messageId":"121","endLine":5,"endColumn":27},{"ruleId":"130","severity":1,"message":"134","line":9,"column":7,"nodeType":"120","messageId":"121","endLine":9,"endColumn":14},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"135","line":2,"column":5,"nodeType":"120","messageId":"121","endLine":2,"endColumn":25},{"ruleId":"118","severity":1,"message":"136","line":3,"column":5,"nodeType":"120","messageId":"121","endLine":3,"endColumn":25},{"ruleId":"118","severity":1,"message":"137","line":4,"column":30,"nodeType":"120","messageId":"121","endLine":4,"endColumn":42},{"ruleId":"118","severity":1,"message":"138","line":5,"column":5,"nodeType":"120","messageId":"121","endLine":5,"endColumn":16},{"ruleId":"118","severity":1,"message":"139","line":14,"column":11,"nodeType":"120","messageId":"121","endLine":14,"endColumn":23},{"ruleId":"118","severity":1,"message":"140","line":1,"column":10,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"141","line":1,"column":28,"nodeType":"120","messageId":"121","endLine":1,"endColumn":39},{"ruleId":"118","severity":1,"message":"142","line":2,"column":9,"nodeType":"120","messageId":"121","endLine":2,"endColumn":19},{"ruleId":"118","severity":1,"message":"143","line":26,"column":11,"nodeType":"120","messageId":"121","endLine":26,"endColumn":17},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"@typescript-eslint/no-unused-vars","'stringify' is defined but never used.","Identifier","unusedVar","'InputHTMLAttributes' is defined but never used.","'EyeIcon' is defined but never used.","'UseFormMethods' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'errors' is assigned a value but never used.",["144"],["145"],"no-unused-vars","'useSelector' is defined but never used.","'getPlayers' is defined but never used.","'bindActionCreators' is defined but never used.","'getData' is assigned a value but never used.","'ERROR_PLAYERS_LOADED' is defined but never used.","'FETCH_PLAYERS_LOADED' is defined but never used.","'fetchPlayers' is defined but never used.","'GET_PLAYERS' is defined but never used.","'PlayersState' is defined but never used.","'createAsyncThunk' is defined but never used.","'createSlice' is defined but never used.","'accessSync' is defined but never used.","'Player' is defined but never used.","no-global-assign","no-unsafe-negation"]